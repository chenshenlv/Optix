//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z9intersecti
.global .align 16 .b8 sphere[16];
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 _ZN21rti_internal_typeinfo6sphereE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename6sphereE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum6sphereE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic6sphereE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation6sphereE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z9intersecti(
	.param .u32 _Z9intersecti_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<61>;
	.reg .b32 	%r<7>;


	ld.global.v4.f32 	{%f13, %f14, %f15, %f16}, [sphere];
	ld.global.f32 	%f20, [ray];
	sub.f32 	%f2, %f20, %f13;
	ld.global.f32 	%f21, [ray+4];
	sub.f32 	%f3, %f21, %f14;
	ld.global.f32 	%f22, [ray+8];
	sub.f32 	%f4, %f22, %f15;
	ld.global.f32 	%f23, [ray+12];
	ld.global.f32 	%f24, [ray+16];
	mul.f32 	%f25, %f24, %f24;
	fma.rn.f32 	%f26, %f23, %f23, %f25;
	ld.global.f32 	%f27, [ray+20];
	fma.rn.f32 	%f28, %f27, %f27, %f26;
	sqrt.rn.f32 	%f29, %f28;
	rcp.rn.f32 	%f5, %f29;
	mul.f32 	%f6, %f5, %f23;
	mul.f32 	%f7, %f5, %f24;
	mul.f32 	%f8, %f5, %f27;
	mul.f32 	%f30, %f3, %f7;
	fma.rn.f32 	%f31, %f2, %f6, %f30;
	fma.rn.f32 	%f9, %f4, %f8, %f31;
	mul.f32 	%f32, %f3, %f3;
	fma.rn.f32 	%f33, %f2, %f2, %f32;
	fma.rn.f32 	%f34, %f4, %f4, %f33;
	mul.f32 	%f35, %f16, %f16;
	sub.f32 	%f36, %f34, %f35;
	mul.f32 	%f37, %f9, %f9;
	sub.f32 	%f10, %f37, %f36;
	setp.leu.f32	%p1, %f10, 0f00000000;
	@%p1 bra 	BB0_5;

	sqrt.rn.f32 	%f11, %f10;
	neg.f32 	%f39, %f9;
	sub.f32 	%f40, %f39, %f11;
	add.f32 	%f41, %f40, 0f00000000;
	mul.f32 	%f38, %f5, %f41;
	// inline asm
	call (%r1), _rt_potential_intersection, (%f38);
	// inline asm
	setp.eq.s32	%p2, %r1, 0;
	@%p2 bra 	BB0_3;

	fma.rn.f32 	%f45, %f6, %f41, %f2;
	fma.rn.f32 	%f46, %f7, %f41, %f3;
	fma.rn.f32 	%f47, %f8, %f41, %f4;
	rcp.rn.f32 	%f48, %f16;
	mul.f32 	%f49, %f45, %f48;
	mul.f32 	%f50, %f46, %f48;
	mul.f32 	%f51, %f47, %f48;
	st.global.f32 	[geometric_normal], %f49;
	st.global.f32 	[geometric_normal+4], %f50;
	st.global.f32 	[geometric_normal+8], %f51;
	st.global.f32 	[shading_normal], %f49;
	st.global.f32 	[shading_normal+4], %f50;
	st.global.f32 	[shading_normal+8], %f51;
	mov.u32 	%r3, 0;
	// inline asm
	call (%r2), _rt_report_intersection, (%r3);
	// inline asm
	setp.ne.s32	%p3, %r2, 0;
	@%p3 bra 	BB0_5;

BB0_3:
	sub.f32 	%f53, %f11, %f9;
	add.f32 	%f12, %f53, 0f00000000;
	mul.f32 	%f52, %f5, %f12;
	// inline asm
	call (%r4), _rt_potential_intersection, (%f52);
	// inline asm
	setp.eq.s32	%p4, %r4, 0;
	@%p4 bra 	BB0_5;

	fma.rn.f32 	%f54, %f6, %f12, %f2;
	fma.rn.f32 	%f55, %f7, %f12, %f3;
	fma.rn.f32 	%f56, %f8, %f12, %f4;
	rcp.rn.f32 	%f57, %f16;
	mul.f32 	%f58, %f54, %f57;
	mul.f32 	%f59, %f55, %f57;
	mul.f32 	%f60, %f56, %f57;
	st.global.f32 	[geometric_normal], %f58;
	st.global.f32 	[geometric_normal+4], %f59;
	st.global.f32 	[geometric_normal+8], %f60;
	st.global.f32 	[shading_normal], %f58;
	st.global.f32 	[shading_normal+4], %f59;
	st.global.f32 	[shading_normal+8], %f60;
	mov.u32 	%r6, 0;
	// inline asm
	call (%r5), _rt_report_intersection, (%r6);
	// inline asm

BB0_5:
	ret;
}

	// .globl	_Z16robust_intersecti
.visible .entry _Z16robust_intersecti(
	.param .u32 _Z16robust_intersecti_param_0
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<84>;
	.reg .b32 	%r<7>;


	ld.global.v4.f32 	{%f25, %f26, %f27, %f28}, [sphere];
	ld.global.f32 	%f32, [ray];
	sub.f32 	%f2, %f32, %f25;
	ld.global.f32 	%f33, [ray+4];
	sub.f32 	%f3, %f33, %f26;
	ld.global.f32 	%f34, [ray+8];
	sub.f32 	%f4, %f34, %f27;
	ld.global.f32 	%f35, [ray+12];
	ld.global.f32 	%f36, [ray+16];
	mul.f32 	%f37, %f36, %f36;
	fma.rn.f32 	%f38, %f35, %f35, %f37;
	ld.global.f32 	%f39, [ray+20];
	fma.rn.f32 	%f40, %f39, %f39, %f38;
	sqrt.rn.f32 	%f41, %f40;
	rcp.rn.f32 	%f5, %f41;
	mul.f32 	%f6, %f5, %f35;
	mul.f32 	%f7, %f5, %f36;
	mul.f32 	%f8, %f5, %f39;
	mul.f32 	%f42, %f3, %f7;
	fma.rn.f32 	%f43, %f2, %f6, %f42;
	fma.rn.f32 	%f81, %f4, %f8, %f43;
	mul.f32 	%f44, %f3, %f3;
	fma.rn.f32 	%f45, %f2, %f2, %f44;
	fma.rn.f32 	%f46, %f4, %f4, %f45;
	mul.f32 	%f10, %f28, %f28;
	sub.f32 	%f47, %f46, %f10;
	mul.f32 	%f48, %f81, %f81;
	sub.f32 	%f11, %f48, %f47;
	setp.leu.f32	%p1, %f11, 0f00000000;
	@%p1 bra 	BB1_8;

	sqrt.rn.f32 	%f82, %f11;
	neg.f32 	%f50, %f81;
	sub.f32 	%f13, %f50, %f82;
	abs.f32 	%f14, %f13;
	mul.f32 	%f15, %f28, 0f41200000;
	mov.f32 	%f83, 0f00000000;
	setp.leu.f32	%p2, %f14, %f15;
	@%p2 bra 	BB1_4;

	fma.rn.f32 	%f52, %f6, %f13, %f2;
	fma.rn.f32 	%f53, %f7, %f13, %f3;
	fma.rn.f32 	%f54, %f8, %f13, %f4;
	mul.f32 	%f55, %f7, %f53;
	fma.rn.f32 	%f56, %f6, %f52, %f55;
	fma.rn.f32 	%f81, %f8, %f54, %f56;
	mul.f32 	%f57, %f53, %f53;
	fma.rn.f32 	%f58, %f52, %f52, %f57;
	fma.rn.f32 	%f59, %f54, %f54, %f58;
	sub.f32 	%f60, %f59, %f10;
	mul.f32 	%f61, %f81, %f81;
	sub.f32 	%f17, %f61, %f60;
	setp.leu.f32	%p3, %f17, 0f00000000;
	@%p3 bra 	BB1_4;

	sqrt.rn.f32 	%f82, %f17;
	neg.f32 	%f62, %f81;
	sub.f32 	%f83, %f62, %f82;

BB1_4:
	add.f32 	%f23, %f13, %f83;
	mul.f32 	%f63, %f5, %f23;
	// inline asm
	call (%r1), _rt_potential_intersection, (%f63);
	// inline asm
	setp.eq.s32	%p4, %r1, 0;
	@%p4 bra 	BB1_6;

	fma.rn.f32 	%f64, %f6, %f23, %f2;
	fma.rn.f32 	%f65, %f7, %f23, %f3;
	fma.rn.f32 	%f66, %f8, %f23, %f4;
	rcp.rn.f32 	%f67, %f28;
	mul.f32 	%f68, %f64, %f67;
	mul.f32 	%f69, %f65, %f67;
	mul.f32 	%f70, %f66, %f67;
	st.global.f32 	[geometric_normal], %f68;
	st.global.f32 	[geometric_normal+4], %f69;
	st.global.f32 	[geometric_normal+8], %f70;
	st.global.f32 	[shading_normal], %f68;
	st.global.f32 	[shading_normal+4], %f69;
	st.global.f32 	[shading_normal+8], %f70;
	mov.u32 	%r3, 0;
	// inline asm
	call (%r2), _rt_report_intersection, (%r3);
	// inline asm
	setp.ne.s32	%p5, %r2, 0;
	@%p5 bra 	BB1_8;

BB1_6:
	setp.gt.f32	%p6, %f14, %f15;
	selp.f32	%f72, %f13, 0f00000000, %p6;
	sub.f32 	%f73, %f82, %f81;
	add.f32 	%f24, %f72, %f73;
	mul.f32 	%f71, %f5, %f24;
	// inline asm
	call (%r4), _rt_potential_intersection, (%f71);
	// inline asm
	setp.eq.s32	%p7, %r4, 0;
	@%p7 bra 	BB1_8;

	fma.rn.f32 	%f74, %f6, %f24, %f2;
	fma.rn.f32 	%f75, %f7, %f24, %f3;
	fma.rn.f32 	%f76, %f8, %f24, %f4;
	rcp.rn.f32 	%f77, %f28;
	mul.f32 	%f78, %f74, %f77;
	mul.f32 	%f79, %f75, %f77;
	mul.f32 	%f80, %f76, %f77;
	st.global.f32 	[geometric_normal], %f78;
	st.global.f32 	[geometric_normal+4], %f79;
	st.global.f32 	[geometric_normal+8], %f80;
	st.global.f32 	[shading_normal], %f78;
	st.global.f32 	[shading_normal+4], %f79;
	st.global.f32 	[shading_normal+8], %f80;
	mov.u32 	%r6, 0;
	// inline asm
	call (%r5), _rt_report_intersection, (%r6);
	// inline asm

BB1_8:
	ret;
}

	// .globl	_Z6boundsiPf
.visible .entry _Z6boundsiPf(
	.param .u32 _Z6boundsiPf_param_0,
	.param .u64 _Z6boundsiPf_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd3, [_Z6boundsiPf_param_1];
	ld.global.v4.f32 	{%f6, %f7, %f8, %f9}, [sphere];
	mov.pred 	%p5, 0;
	setp.leu.f32	%p4, %f9, 0f00000000;
	@%p4 bra 	BB2_2;

	abs.f32 	%f10, %f9;
	setp.neu.f32	%p5, %f10, 0f7F800000;

BB2_2:
	cvta.to.global.u64 	%rd2, %rd3;
	@%p5 bra 	BB2_4;
	bra.uni 	BB2_3;

BB2_4:
	sub.f32 	%f11, %f6, %f9;
	st.global.f32 	[%rd2], %f11;
	sub.f32 	%f12, %f7, %f9;
	st.global.f32 	[%rd2+4], %f12;
	sub.f32 	%f13, %f8, %f9;
	st.global.f32 	[%rd2+8], %f13;
	add.f32 	%f14, %f6, %f9;
	st.global.f32 	[%rd2+12], %f14;
	add.f32 	%f15, %f7, %f9;
	st.global.f32 	[%rd2+16], %f15;
	add.f32 	%f16, %f8, %f9;
	st.global.f32 	[%rd2+20], %f16;
	bra.uni 	BB2_5;

BB2_3:
	mov.u32 	%r1, 2096152002;
	st.global.u32 	[%rd2], %r1;
	st.global.u32 	[%rd2+4], %r1;
	st.global.u32 	[%rd2+8], %r1;
	mov.u64 	%rd4, 4243635650;
	st.global.u32 	[%rd2+16], %rd4;
	st.global.u32 	[%rd2+12], %rd4;
	mov.u32 	%r2, -51331646;
	st.global.u32 	[%rd2+20], %r2;

BB2_5:
	ret;
}


